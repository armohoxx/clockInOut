//
//  HistoryPageInteractor.swift
//  clockInOut
//
//  Created armyxx on 20/12/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Firebase
import FirebaseAuth

class HistoryPageInteractor: HistoryPageInteractorProtocol {

    weak var presenter: HistoryPagePresenterProtocol?
    let db = Firestore.firestore()
    
    var dataHistoryArray: [DataHistory] = []
    var dataHistory: DataHistory?
    
    func setNotificationCenter() {
        //ตัวสังเกคการณ์ notification center
        NotificationCenter.default.addObserver(self, selector: #selector(setDataHistory),
                                               name: Notification.Name("pushClockIn"), object: nil)
        
        NotificationCenter.default.addObserver(self, selector: #selector(setDataHistory),
                                               name: Notification.Name("pushClockOut"), object: nil)
    }
    
    @objc func setDataHistory() {
        self.dataHistory = nil
        self.dataHistoryArray.removeAll()
        
        guard let userEmail = Auth.auth().currentUser?.email else { return }

        db.collection("log_clockinout")
            .whereField("user_email", isEqualTo: userEmail)
            .getDocuments() { (result, err) in
              if let err = err {
                  self.presenter?.notifyErrorAlert(error: err)
              } else {
                 
                  for document in result!.documents {
                      let docData = document.data()
                      do {
                          self.dataHistory = try DataHistory.init(map: docData)
                          self.dataHistoryArray.append(self.dataHistory!)
                      } catch {
                          self.presenter?.notifyErrorAlert(error: err)
                      }
                  }
                  
                  self.presenter?.getHistoryData(dataHistory: self.dataHistoryArray)
              }
          }
    }
}
