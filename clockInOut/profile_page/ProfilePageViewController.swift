//
//  ProfilePageViewController.swift
//  clockInOut
//
//  Created armyxx on 17/12/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ProfilePageViewController: UIViewController, ProfilePageViewProtocol {

	var presenter: ProfilePagePresenterProtocol?
    
    @IBOutlet weak var navBarProfile: UINavigationBar!
    @IBOutlet weak var firstNameField: UITextField!
    @IBOutlet weak var lastNameField: UITextField!
    @IBOutlet weak var uidField: UITextField!
    @IBOutlet weak var buttonChangePassword: UIButton!
    @IBOutlet weak var buttonDeleteAccount: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        if #available(iOS 13.0, *) {
            navBarProfile.barTintColor = .secondarySystemBackground
        } else {
            navBarProfile.barTintColor = .white
        }
        
        let navBarButton = UIBarButtonItem(title: "Back", style: .plain, target: nil, action: #selector(didTapProfile))
        
        navBarProfile.delegate = self
        navBarProfile.topItem?.leftBarButtonItem = navBarButton
        
        self.presenter?.notifyDataFromFirestore()
    }
    
    @objc func didTapProfile() {
        self.presenter?.notifyRouteMenu()
    }
    
    @IBAction func didTapChangePassword(_ sender: UIButton) {
        self.showResetPasswordAlert()
    }
    
    @IBAction func didTapDeleteAccount(_ sender: UIButton) {
        
    }
    
    func showUserData(firstname: String, lastname: String, uid: String) {
        DispatchQueue.main.async {
            self.firstNameField.text = firstname
            self.lastNameField.text = lastname
            self.uidField.text = uid
        }
    }
    
    func showSuccessAlert(message: String) {
        let alertController = UIAlertController(title: "Success",
                                                message: message,
                                                preferredStyle: .alert)
        
        let okAction = UIAlertAction(title: "OK",
                                         style: .cancel,
                                         handler: nil)
        
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    
    func showErrorAlert(error: Error?) {
        guard error == nil else {
            let alertController = UIAlertController(title: "Someting Wrong",
                                                    message: "\(error!.localizedDescription)",
                                                    preferredStyle: .alert)
            
            let okAction = UIAlertAction(title: "OK",
                                             style: .cancel,
                                             handler: nil)
            
            alertController.addAction(okAction)
            self.present(alertController, animated: true, completion: nil)
            return
        }
    }
    
    func showResetPasswordAlert() {
        let alertController = UIAlertController(title: "Reset Password",
                                                message: "",
                                                preferredStyle: .alert)
        
        let cancelAction = UIAlertAction(title: "Cancel", style: .cancel, handler: nil)
        
        let confirmAction = UIAlertAction(title: "Continue", style: .default, handler: { _ in
            guard let fieldEmail = alertController.textFields, fieldEmail.count == 1 else {
                return
            }
            
            let resetEmailField = fieldEmail[0]
            
            self.presenter?.notifyResetPassword(email: resetEmailField.text!)
        })
        
        alertController.addTextField { field in
            field.placeholder = "Please enter your email"
            field.returnKeyType = .continue
            field.keyboardType = .emailAddress
        }
        
        alertController.addAction(cancelAction)
        alertController.addAction(confirmAction)
        
        self.present(alertController, animated: true, completion: nil)
    }
}

extension ProfilePageViewController: UINavigationBarDelegate {
    
    func position(for bar: UIBarPositioning) -> UIBarPosition {
        return .topAttached
    }
}
