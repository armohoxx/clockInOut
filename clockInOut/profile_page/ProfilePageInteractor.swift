//
//  ProfilePageInteractor.swift
//  clockInOut
//
//  Created armyxx on 17/12/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Firebase
import FirebaseAuth

class ProfilePageInteractor: ProfilePageInteractorProtocol {

    weak var presenter: ProfilePagePresenterProtocol?
    let db = Firestore.firestore()
    var dataUser: DataUser?
    var dataUserArray: [DataUser] = []
    
    func setDataFromFirestore() {
        guard let userID = Auth.auth().currentUser?.uid else { return }
        
        db.collection("user").whereField("uid", isEqualTo: userID)
            .getDocuments() { (querySnapshot, err) in
                
                if let err = err {
                    print("Error getting documents: \(err)")
                } else {
                    
                    for document in querySnapshot!.documents {
                        print("\(document.documentID) => \(document.data())")
                        let firstname = document.data()["firstname"] as! String
                        let lastname = document.data()["lastname"] as! String
                        let uid = document.data()["uid"] as! String
                        
                        self.presenter?.getDataFromFirestore(firstname: firstname, lastname: lastname, uid: uid)
                    }
                    
                }
        }
    }
    
    func resetPassword(email: String) {
        //reset password via email and send email to reset
        FirebaseAuth.Auth.auth().sendPasswordReset(withEmail: email) { error in
            if let error = error {
                self.presenter?.notifyErrorAlert(error: error)
            } else {
                self.presenter?.notifySuccessAlert(message: "Sended email reset password")
            }
        }
    }
    
    func deleteUser(confirmDelete: String) {
        let user = Auth.auth().currentUser
        let confirmStringToDelete = "Confirm Delete"
        if confirmStringToDelete == confirmDelete {
            user?.delete { error in
              if let error = error {
                  self.presenter?.notifyErrorAlert(error: error)
              } else {
                  self.presenter?.notifySuccessAlert(message: "Delete Account Success")
              }
            }
        } else {
            self.presenter?.notifyErrorAlert(error: "Please enter correct information" as? Error)
        }
    }
}
