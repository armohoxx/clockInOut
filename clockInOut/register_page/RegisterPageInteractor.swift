//
//  RegisterPageInteractor.swift
//  clockInOut
//
//  Created armyxx on 2/12/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Firebase
import FirebaseAuth
import FirebaseStorage

class RegisterPageInteractor: RegisterPageInteractorProtocol {

    weak var presenter: RegisterPagePresenterProtocol?
    
    //create user via firebase authtication
    func createUser(firstName: String, lastName: String, email: String, password: String) {
        
        FirebaseAuth.Auth.auth().createUser(withEmail: email, password: password, completion: { [weak self] result, error in
            
//            self?.uploadProfileImage(<#T##image: UIImage##UIImage#>, completion: <#T##((String?) -> ())##((String?) -> ())##(_ url: String?) -> ()#>)
            
            if (error != nil) {
                self?.presenter?.notifyErrorCreateUser(error: error)
            } else {
                
                //keep firstname, lastname and uid to firststore
                let db = Firestore.firestore()
                
                db.collection("user").addDocument(data: ["firstname": firstName, "lastname": lastName, "uid": result!.user.uid]) {
                    error in
                    
                    if error != nil {
                        self?.presenter?.notifyErrorCreateUser(error: error)
                    } else {
                        print("create user")
                        self?.presenter?.notifySuccessCreateUser()
                    }
                }
            }
        })
    }
    
    func uploadProfileImage(_ image:UIImage, completion: @escaping ((_ url:String?)->())) {
        guard let uid = Auth.auth().currentUser?.uid else { return }
        let storageRef = Storage.storage().reference().child("user_images/\(uid)")
    }
}
