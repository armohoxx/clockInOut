//
//  MainPageViewController.swift
//  clockInOut
//
//  Created armyxx on 2/12/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class MainPageViewController: UIViewController, MainPageViewProtocol {

	var presenter: MainPagePresenterProtocol?
    
    @IBOutlet weak var timeLabel: UILabel!
    @IBOutlet weak var dateLabel: UILabel!
    @IBOutlet weak var indicator: UIActivityIndicatorView!
    @IBOutlet weak var buttonClockIn: UIButton!
    @IBOutlet weak var buttonClockOut: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        title = "Main"
        
        self.showLoader()
        self.view.backgroundColor = UIColor().named(UserDefaults.standard.string(forKey: "background_color") ?? "secondarySystemBackground")
        self.presenter?.getDateTime()
    }
    
    func showLoader() {
        indicator.color = .systemRed
        indicator.startAnimating()
    }
    
    func showDateTime(currentDate: String, currentTime: String) {
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5, execute: {
            self.indicator.stopAnimating()
            self.indicator.hidesWhenStopped = true
            self.timeLabel.text = currentTime
            self.dateLabel.text = currentDate
        })
    }
    
    @IBAction func didTapClockIn(_ sender: UIButton) {
        //เมื่อเกิดการคลิกให้ update History view
        NotificationCenter.default.post(name: Notification.Name("pushClockIn"), object: nil)
        self.presenter?.getClockIn()
    }
    
    @IBAction func didTapClockOut(_ sender: UIButton) {
        //เมื่อเกิดการคลิกให้ update History view
        NotificationCenter.default.post(name: Notification.Name("pushClockOut"), object: nil)
        self.presenter?.getClockOut()
    }
    
    func showSuccessAlert(message: String) {
        let alertController = UIAlertController(title: "Success",
                                                message: message,
                                                preferredStyle: .alert)
        
        let okAction = UIAlertAction(title: "OK",
                                     style: .cancel,
                                     handler: nil)
        
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    
    func changeBackgroundColor(color: UIColor) {
        DispatchQueue.main.async {
            self.view.backgroundColor = color
        }
    }
}

extension UIColor {
    
    public func named(_ name: String) -> UIColor? {
        let allColors: [String: UIColor] = [
            "red": .red,
            "green": .green,
            "white": .white,
            "secondarySystemBackground": .secondarySystemBackground
        ]
        let cleanedName = name.replacingOccurrences(of: " ", with: "")
        return allColors[cleanedName]
    }
}



