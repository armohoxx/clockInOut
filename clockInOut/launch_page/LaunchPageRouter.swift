//
//  LaunchPageRouter.swift
//  clockInOut
//
//  Created armyxx on 1/12/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LaunchPageRouter: LaunchPageWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    func routeToLogin() {
        let loginPage = LoginPageRouter.createModule()
        
        loginPage.modalPresentationStyle = .fullScreen
        self.viewController?.present(loginPage, animated: true)
    }
    
    func tabBarViewController() {
        let viewControllerTabBar = UITabBarController()
        let viewControllerMainPage = MainPageRouter.createModule()
        let viewControllerHistoryPage = HistoryPageRouter.createModule()
        let viewControllerMenuPage = MenuPageRouter.createModule()
        
        viewControllerMainPage.title = "Main"
        viewControllerHistoryPage.title = "History"
        viewControllerMenuPage.title = "Menu"
        
        if #available(iOS 13.0, *) {
            viewControllerTabBar.tabBar.backgroundColor = .secondarySystemBackground
        } else {
            viewControllerTabBar.tabBar.backgroundColor = .white
        }
        
        viewControllerTabBar.setViewControllers([viewControllerMainPage,
                                                 viewControllerHistoryPage,
                                                 viewControllerMenuPage], animated: false)
        
        guard let items = viewControllerTabBar.tabBar.items else {
            return
        }
        
        let images = ["clock", "clock.arrow.circlepath","text.justify"]
        
        for x in 0..<items.count {
            items[x].image = UIImage(systemName: images[x])
        }
        
        viewControllerTabBar.modalPresentationStyle = .fullScreen;
        self.viewController?.present(viewControllerTabBar, animated: true)
        
    }
    
    static func createModule() -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = LaunchPageViewController(nibName: nil, bundle: nil)
        let interactor = LaunchPageInteractor()
        let router = LaunchPageRouter()
        let presenter = LaunchPagePresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
}
